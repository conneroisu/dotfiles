/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as Verify2faRouteImport } from './routes/verify-2fa'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AuthDemoRouteImport } from './routes/auth-demo'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'

const rootServerRouteImport = createServerRootRoute()

const Verify2faRoute = Verify2faRouteImport.update({
  id: '/verify-2fa',
  path: '/verify-2fa',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDemoRoute = AuthDemoRouteImport.update({
  id: '/auth-demo',
  path: '/auth-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth-demo': typeof AuthDemoRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-2fa': typeof Verify2faRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth-demo': typeof AuthDemoRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-2fa': typeof Verify2faRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth-demo': typeof AuthDemoRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verify-2fa': typeof Verify2faRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth-demo'
    | '/forgot-password'
    | '/reset-password'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/verify-2fa'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth-demo'
    | '/forgot-password'
    | '/reset-password'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/verify-2fa'
  id:
    | '__root__'
    | '/'
    | '/auth-demo'
    | '/forgot-password'
    | '/reset-password'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
    | '/verify-2fa'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthDemoRoute: typeof AuthDemoRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SettingsRoute: typeof SettingsRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  Verify2faRoute: typeof Verify2faRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-2fa': {
      id: '/verify-2fa'
      path: '/verify-2fa'
      fullPath: '/verify-2fa'
      preLoaderRoute: typeof Verify2faRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth-demo': {
      id: '/auth-demo'
      path: '/auth-demo'
      fullPath: '/auth-demo'
      preLoaderRoute: typeof AuthDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthDemoRoute: AuthDemoRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SettingsRoute: SettingsRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  Verify2faRoute: Verify2faRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
